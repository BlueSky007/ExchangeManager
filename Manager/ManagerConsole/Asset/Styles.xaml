<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <system:Double x:Key="DividerWith">1.4</system:Double>
    <SolidColorBrush x:Key="TextBrush" Color="#FFFFFFFF" />
    <Color x:Key="TextColor">#FFFFFFFF</Color>

    <SolidColorBrush Color="#FF3AB5E9" x:Key="ForegroundColor_Family"/>
    <SolidColorBrush Color="#FF386A23" x:Key="ForegroundColor_Friends"/>
    <SolidColorBrush Color="#FFc62d36" x:Key="ForegroundColor_Coworkers"/>
    <Style x:Key="TxtBlockStyle_NickName" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="3,0,3,0" />
        <Setter Property="Width" Value="70" />
    </Style>
    
    <LinearGradientBrush x:Key="BackGroundForPanel" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF9D9FA9" Offset="0"/>
        <GradientStop Color="#FFBDC1D0" Offset="1"/>
        <GradientStop Color="#FF4F5570" Offset="0.263"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TableItemPanel" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF9D9FA9" Offset="0"/>
        <GradientStop Color="#FF473C5E" Offset="1"/>
        <GradientStop Color="#FF4F5570" Offset="0.263"/>
    </LinearGradientBrush>

    <Style x:Key="TxtBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style x:Key="InstrumentExecutedOrderSummaryRowStyle" TargetType="{x:Type ig:CellControl}">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Hei"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    <Style x:Key="RangeExecutedOrderSummaryRowStyle" TargetType="{x:Type ig:CellControl}">
        <Setter Property="Background" Value="#FFCFDDD0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontFamily" Value="Hei"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style x:Key="EditingCellStyle" TargetType="{x:Type ig:CellControl}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10" />
    </Style>


    <!-- Divider Style -->
    <Style x:Key="DividerStyle" TargetType="Rectangle">
        <Setter Property="Fill" Value="White"/>
        <Setter Property="Width" Value="{StaticResource DividerWith}"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="5,4,2,4"/>
    </Style>

    <Style x:Key="EditCellStyle" TargetType="ig:CellControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:CellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Alternate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AltElem" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="NotSelected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="InActive" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedStates">
                                <VisualState x:Name="Fixed" />
                                <VisualState x:Name="Unfixed" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditingStates">
                                <VisualState x:Name="Editing" />
                                <VisualState x:Name="NotEditing" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root" />
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" x:Name="AltElem" />
                        <Rectangle Margin="0,0,1,0">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#FFF6F9FC" />
                                            <GradientStop Offset="1" Color="#FFB4D0E9" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Fill="#0C333333" Height="1" VerticalAlignment="Bottom" Margin="0,0,1,0" />
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="ExecuteSatusCellStyle" TargetType="ig:CellControl">
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#FFE16941" />
    </Style>-->
    <Style x:Key="WaiteSatusCellStyle" TargetType="ig:CellControl">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="White" />
    </Style>
    <Style x:Key="EnableCellStyle" TargetType="ig:CellControl">
        <Setter Property="BorderBrush" Value="#FFDEDEDE" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Background" Value="White" />
    </Style>
    <Style x:Key="BuyOrderHandleStyle" TargetType="ig:CellControl" >
        <Setter Property="Foreground" Value="Blue" />
    </Style>
    <Style x:Key="SellOrderHandleStyle" TargetType="ig:CellControl" >
        <Setter Property="Foreground" Value="Red" />
    </Style>

    <Style TargetType="ToggleButton" x:Key="stlToggleButton">
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Width" Value="19"></Setter>
        <Setter Property="Height" Value="19"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundHover" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                            <Border x:Name="BackgroundHover" Background="{StaticResource ButtonHoverBackgroundBrush}" BorderBrush="{StaticResource ButtonHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Opacity="0"/>
                            <Border x:Name="BackgroundPressed" Background="{StaticResource ButtonPressedBackgroundBrush}" BorderBrush="{StaticResource ButtonPressedBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0"/>
                            <Border x:Name="BackgroundDisabled" Background="{StaticResource ButtonDisabledBackgroundBrush}" BorderBrush="{StaticResource ButtonDisabledBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0"/>
                            <Border x:Name="Highlight" BorderBrush="{StaticResource DropDownButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Margin="{TemplateBinding BorderThickness}" IsHitTestVisible="false" Opacity="0"/>
                        </Grid>
                        <Grid VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center">
                            <Path x:Name="BtnArrowBackground" Stretch="Fill" Height="4" Margin="0,2,0,0"
            Width="7" Data="M 0,0 C0,0 7,0 7,0 7,0 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z">
                                <Path.Fill>
                                    <SolidColorBrush  x:Name="BtnArrowColorBackground" Color="{StaticResource Color_011}"/>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="BtnArrowForeground" Stretch="Fill" Height="4"
            Width="7" Data="M 0,0 C0,0 7,0 7,0 7,0 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z">
                                <Path.Fill>
                                    <SolidColorBrush x:Name="BtnArrowColorForeground" Color="{StaticResource Color_011}"/>
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox Style-->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Margin" Value="2,5,2,5"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border  BorderBrush="Black" BorderThickness="0.7" Background="White">
                        <Grid>
                            <ToggleButton  Style="{StaticResource stlToggleButton}" Focusable="False"
             IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
             ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter  IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center" Margin="3" HorizontalAlignment="Stretch" />
                            <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Stretch" Focusable="True" Visibility="Collapsed" IsReadOnly="False"/>
                            <Popup HorizontalOffset="-1" Width="{TemplateBinding ActualWidth}"  IsOpen="{TemplateBinding IsDropDownOpen}" Focusable="False"    PopupAnimation="Slide">
                                <Grid  SnapsToDevicePixels="True" HorizontalAlignment="Stretch"   >
                                    <Border  BorderThickness="1,1,1,1" BorderBrush="Black" HorizontalAlignment="Stretch" >
                                        <Border.Background>
                                            <SolidColorBrush Color="White" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer  SnapsToDevicePixels="True" HorizontalAlignment="Stretch" >
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" HorizontalAlignment="Stretch" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="ItemBorder" Padding="2" Margin="1" HorizontalAlignment="Stretch">
                        <ContentPresenter HorizontalAlignment="Stretch"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="ItemBorder" Value="#FF3A3A3A"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="TextBoxBorderStyle" TargetType="{x:Type Border}" >
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="BorderBrush" Value="Black"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="3"></Setter>
    </Style>
    <!--TextBox-->
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}" >
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Style="{StaticResource TextBoxBorderStyle}" SnapsToDevicePixels="True" x:Name="Bd">
                        <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <system:Boolean>False</system:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="CellItemNormalBorderBrush" Color="#FFC9CACA"/>
    <SolidColorBrush x:Key="CellItemAltNormalBackgroundBrush" Color="#FFF6F9FC"/>

    <Style x:Key="ExecuteSatusCellStyle" TargetType="ig:CellControl">
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:CellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AltElem" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="NotSelected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Active"/>
                                <VisualState x:Name="InActive"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedStates">
                                <VisualState x:Name="Fixed"/>
                                <VisualState x:Name="Unfixed"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditingStates">
                                <VisualState x:Name="Editing"/>
                                <VisualState x:Name="NotEditing"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root"/>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource CellItemAltNormalBackgroundBrush}" Visibility="Collapsed" x:Name="AltElem"/>
                        <Rectangle Margin="0,0,1,0">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#CCffcc00"/>
                                            <GradientStop Offset="0.988" Color="#CCFF6700"/>
                                            <GradientStop Offset="1" Color="#CCff6600"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Fill="#0C333333" Height="1" VerticalAlignment="Bottom" Margin="0,0,1,0"/>
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TableItemStyle" TargetType="TabItem">
        <Setter Property="Background" Value="{StaticResource TableItemPanel}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="CellStylePadding" TargetType="ig:CellControl">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="BorderBrush" Value="Gray"/>
    </Style>


</ResourceDictionary>