<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <system:Double x:Key="DividerWith">1.4</system:Double>
    <SolidColorBrush x:Key="TextBrush" Color="#FFFFFFFF" />
    <Color x:Key="TextColor">#FFFFFFFF</Color>

    <SolidColorBrush Color="#FF3AB5E9" x:Key="ForegroundColor_Family"/>
    <SolidColorBrush Color="#FF386A23" x:Key="ForegroundColor_Friends"/>
    <SolidColorBrush Color="#FFc62d36" x:Key="ForegroundColor_Coworkers"/>

    <Style x:Key="QuoteInstrumentNormalStyle" TargetType="ig:CellControl">
        <Setter Property="Padding" Value="0,0,5,0"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
    </Style>
    <Style x:Key="QuoteInstrumentStyle" TargetType="ig:CellControl">
        <Setter Property="Background" Value="#FF314D34"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0,1,1,1"/>
    </Style>

    <Style x:Key="TitleProject" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="hei"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="FontStretch" Value="Expanded"/>
    </Style>
    
    <Style x:Key="QuoteTextStyle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    
    <Style x:Key="TxtBlockStyle_NickName" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="3,0,3,0" />
        <Setter Property="Width" Value="70" />
    </Style>

    <LinearGradientBrush x:Key="TableItemPanel" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF9D9FA9" Offset="0"/>
        <GradientStop Color="#FF473C5E" Offset="1"/>
        <GradientStop Color="#FF4F5570" Offset="0.263"/>
    </LinearGradientBrush>

    <Style x:Key="TxtBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style x:Key="InstrumentExecutedOrderSummaryRowStyle" TargetType="{x:Type ig:CellControl}">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Hei"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    <Style x:Key="RangeExecutedOrderSummaryRowStyle" TargetType="{x:Type ig:CellControl}">
        <Setter Property="Background" Value="#FFCFDDD0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontFamily" Value="Hei"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style x:Key="EditingCellStyle" TargetType="{x:Type ig:CellControl}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10" />
    </Style>


    <!-- Divider Style -->
    <Style x:Key="DividerStyle" TargetType="Rectangle">
        <Setter Property="Fill" Value="White"/>
        <Setter Property="Width" Value="{StaticResource DividerWith}"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="5,4,2,4"/>
    </Style>

    <Style x:Key="EditCellStyle" TargetType="ig:CellControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:CellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Alternate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AltElem" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="NotSelected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="InActive" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedStates">
                                <VisualState x:Name="Fixed" />
                                <VisualState x:Name="Unfixed" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditingStates">
                                <VisualState x:Name="Editing" />
                                <VisualState x:Name="NotEditing" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root" />
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" x:Name="AltElem" />
                        <Rectangle Margin="0,0,1,0">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#FFF6F9FC" />
                                            <GradientStop Offset="1" Color="#FFB4D0E9" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Fill="#0C333333" Height="1" VerticalAlignment="Bottom" Margin="0,0,1,0" />
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="ExecuteSatusCellStyle" TargetType="ig:CellControl">
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#FFE16941" />
    </Style>-->
    <Style x:Key="WaiteSatusCellStyle" TargetType="ig:CellControl">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="White" />
    </Style>
    <Style x:Key="EnableCellStyle" TargetType="ig:CellControl">
        <Setter Property="BorderBrush" Value="#FFDEDEDE" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Background" Value="White" />
    </Style>
    <Style x:Key="BuyOrderHandleStyle" TargetType="ig:CellControl" >
        <Setter Property="Foreground" Value="Blue" />
    </Style>
    <Style x:Key="SellOrderHandleStyle" TargetType="ig:CellControl" >
        <Setter Property="Foreground" Value="Red" />
    </Style>

    <Style x:Key="TimesCellStyle" TargetType="ig:CellControl">
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="#FF26355D"/>
    </Style>


    <Style x:Key="ItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="ItemBorder" Padding="2" Margin="1" HorizontalAlignment="Stretch">
                        <ContentPresenter HorizontalAlignment="Stretch"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="ItemBorder" Value="#FF3A3A3A"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="TextBoxBorderStyle" TargetType="{x:Type Border}" >
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="BorderBrush" Value="Black"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="3"></Setter>
    </Style>
    <!--TextBox-->
    <Style x:Key="AnswerLotTextBoxStyle" TargetType="{x:Type TextBox}" >
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Style="{StaticResource TextBoxBorderStyle}" CornerRadius="5" SnapsToDevicePixels="True" x:Name="Bd">
                        <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <system:Boolean>False</system:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="CellItemNormalBorderBrush" Color="#FFC9CACA"/>
    <SolidColorBrush x:Key="CellItemAltNormalBackgroundBrush" Color="Gray"/>
    <Style x:Key="ExecuteSatusCellStyle" TargetType="ig:CellControl">
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="Padding" Value="2,0,8,0"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:CellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AltElem" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="NotSelected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Active"/>
                                <VisualState x:Name="InActive"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedStates">
                                <VisualState x:Name="Fixed"/>
                                <VisualState x:Name="Unfixed"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditingStates">
                                <VisualState x:Name="Editing"/>
                                <VisualState x:Name="NotEditing"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root"/>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource CellItemAltNormalBackgroundBrush}" Visibility="Collapsed" x:Name="AltElem"/>
                        <Rectangle Margin="0,0,1,0">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#FF28353D"/>
                                            <GradientStop Offset="0.988" Color="#FF282828"/>
                                            <GradientStop Offset="1" Color="Black"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Fill="Black" Height="1" VerticalAlignment="Bottom" Margin="0,0,1,0"/>
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TableItemStyle" TargetType="TabItem">
        <Setter Property="Background" Value="{StaticResource TableItemPanel}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="CellStylePadding" TargetType="ig:CellControl">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="BorderBrush" Value="Gray"/>
    </Style>

    <Style x:Key="DealingOrderBuyButtonStyle" TargetType="Button">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="Blue"/>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Button.Foreground" Value="Blue"/>
                <Setter Property="Button.Background" Value="Blue"/>
                <Setter Property="Button.Height" Value="35"/>
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Button.Foreground" Value="#FF314D34"/>
                <Setter Property="Button.Background" Value="Blue"/>
                <Setter Property="Button.Height" Value="37"/>
                <Setter Property="Button.BorderBrush" Value="Green"/>
                <Setter Property="Button.BorderThickness" Value="1"/>
            </Trigger>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                Storyboard.TargetProperty="Opacity"
                                To="0.9"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Duration="0:0:1"
                                Storyboard.TargetProperty="Opacity"  />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DealingOrderSellButtonStyle" TargetType="Button">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="Red"/>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Button.Foreground" Value="LightPink"/>
                <Setter Property="Button.Height" Value="35"/>
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Button.Foreground" Value="Pink"/>
                <Setter Property="Button.Height" Value="37"/>
                <Setter Property="Button.BorderBrush" Value="Green"/>
                <Setter Property="Button.BorderThickness" Value="1"/>
            </Trigger>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                Storyboard.TargetProperty="Opacity"
                                To="0.9"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Duration="0:0:1"
                                Storyboard.TargetProperty="Opacity"  />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="AdjustButtonHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF314D34" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DownButtonHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="Yellow" Offset="1" />
    </LinearGradientBrush>


    <!-- *********************************  Button Style  ********************************* -->
    <Style x:Key="UpButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="Button">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AdjustButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BaseShape" CornerRadius="1" Background="#FF92D050" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="ButtonHighlight" Margin="1" RadiusX="1" RadiusY="1" Stroke="{StaticResource ButtonHoverHighlightBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" Opacity="0"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="Yellow" StrokeThickness="1"  RadiusX="1" RadiusY="1" Opacity="0"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" RadiusX="3" RadiusY="3" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DownButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="Button">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DownButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BaseShape" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BaseShape" CornerRadius="1" Background="#FFFFCC00" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="ButtonHighlight" Margin="1" RadiusX="1" RadiusY="1" Stroke="{StaticResource ButtonHoverHighlightBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" Opacity="0"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="Gray" StrokeThickness="1"  RadiusX="1" RadiusY="1" Opacity="0"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="false" RadiusX="3" RadiusY="3" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="RedButtonHoverBackgroundBrush" Color="#FF990000" />
    <SolidColorBrush x:Key="RedButtonPressBackgroundBrush" Color="#FF660000" />

    <Style x:Key="RedButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RedButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RedButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RedButtonPressBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RedButtonPressBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" Fill="Red" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="2" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="GreenButtonHoverBackgroundBrush" Color="#FF006600" />
    <SolidColorBrush x:Key="GreenButtonPressBackgroundBrush" Color="#FF004400" />
    <Style x:Key="GreenButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GreenButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GreenButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GreenButtonPressBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GreenButtonPressBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" Fill="Green" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="2" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPrim:PagerCellControl" >
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PagerCellControl">
                    <igPrim:PagerControl x:Name="PagerItemControl">
                        <ig:Commanding.Commands>
                            <ig:CommandSourceCollection>
                                <ig:XamGridPagingCommandSource  AllowEventHandling="True" EventName="FirstPage"  CommandType="FirstPage" >
                                </ig:XamGridPagingCommandSource>
                                <ig:XamGridPagingCommandSource AllowEventHandling="True" EventName="LastPage"  CommandType="LastPage" >
                                </ig:XamGridPagingCommandSource>
                                <ig:XamGridPagingCommandSource AllowEventHandling="True" EventName="PreviousPage"  CommandType="PreviousPage" >
                                </ig:XamGridPagingCommandSource>
                                <ig:XamGridPagingCommandSource  AllowEventHandling="True" EventName="NextPage"  CommandType="NextPage" >
                                </ig:XamGridPagingCommandSource>
                                <ig:XamGridPagingCommandSource  AllowEventHandling="True" EventName="GoToPage"  CommandType="GoToPage" >
                                </ig:XamGridPagingCommandSource>
                            </ig:CommandSourceCollection>
                        </ig:Commanding.Commands>
                        <igPrim:PagerControl.Style>
                            <Style TargetType="igPrim:PagerControl">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="igPrim:PagerControl">
                                            <Grid Height="20" Background="{TemplateBinding Background}" Width="AUTO">
                                                <StackPanel Orientation="Horizontal" Background="{TemplateBinding Background}" HorizontalAlignment="Right">
                                                    <Button x:Name="PreviouspageButton" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" >
                                                        <Button.Content>
                                                            <Path Data="M0,0.5 L10,10 10,0Z" Fill="DarkGray" RenderTransformOrigin="0.5,0.5">
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform/>
                                                                        <SkewTransform/>
                                                                        <RotateTransform Angle="-134"/>
                                                                        <TranslateTransform/>
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                            <!--<Image Source="../Asset/Images/back.png" ToolTipService.ToolTip="Prev"/>-->
                                                        </Button.Content>
                                                        <ig:Commanding.Command>
                                                            <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="PreviousPage"  ></ig:XamGridPagingControlsCommandSource>
                                                        </ig:Commanding.Command>
                                                    </Button>
                                                    <ComboBox x:Name="PagerItems" >
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock TextAlignment="Center" Text="{Binding}"></TextBlock>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                        <ig:Commanding.Command>
                                                            <ig:XamGridPagingControlsCommandSource EventName="SelectionChanged" CommandType="GoToPage"  ></ig:XamGridPagingControlsCommandSource>
                                                        </ig:Commanding.Command>
                                                    </ComboBox>
                                                    <Button x:Name="NextPageButton" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                                        <Button.Content>
                                                            <Path Data="M0,0.5 L10,10 10,0Z" Fill="DarkGray" RenderTransformOrigin="0.5,0.5">
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform/>
                                                                        <SkewTransform/>
                                                                        <RotateTransform Angle="45"/>
                                                                        <TranslateTransform/>
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                            <!--<Image Source="../Asset/Images/forward.png" ToolTipService.ToolTip="Next"/>-->
                                                        </Button.Content>
                                                        <ig:Commanding.Command>
                                                            <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="NextPage"  ></ig:XamGridPagingControlsCommandSource>
                                                        </ig:Commanding.Command>
                                                    </Button>
                                                </StackPanel>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </igPrim:PagerControl.Style>
                    </igPrim:PagerControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>